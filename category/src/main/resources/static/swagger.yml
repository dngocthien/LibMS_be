swagger: '2.0'
info:
  description: |
    This is a project to manage library system
  version: 1.0.0
  title: LibM
  termsOfService: http://swagger.io/terms/
  contact:
    email: thien.dinh@successsoftware.lobal
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: libm.swagger.io
# basePath: /api
tags:
  - name: categories
    description: Categories using for book info

# schemes:
# - http
paths:
  /categories:
    get:
      tags:
        - categories
      summary: Get all categories
      operationId: getAllCategories
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CategorySwagger'
        405:
          description: Invalid input
    post:
      tags:
        - categories
      summary: Add a new category to the libm
      operationId: getAllCategory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Categories of books
          required: true
          schema:
            $ref: '#/definitions/CategorySwagger'
      responses:
        405:
          description: Invalid input
  /categories/{id}:
    put:
      tags:
        - categories
      summary: Update an existing category
      operationId: updateCategory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: id that need to be updated
          required: true
          type: integer
        - in: body
          name: body
          description: category object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/CategorySwagger'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: category not found
        405:
          description: Validation exception
    get:
      tags:
        - categories
      summary: Get category by category id
      operationId: getCategoryById
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: The name that needs to be fetched.
          required: true
          type: integer
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CategorySwagger'
        400:
          description: Invalid category id supplied
        404:
          description: Category not found
    delete:
      tags:
        - categories
      summary: Delete category by category id
      operationId: deleteCategory
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: The name that needs to be fetched.
          required: true
          type: integer
      responses:
        400:
          description: Invalid category id supplied
        404:
          description: Category not found

# securityDefinitions:
#   category_auth:
#     type: oauth2
#     authorizationUrl: http://categories.swagger.io/oauth/dialog
#     flow: implicit
#     scopes:
#       write:categories: modify categories in your account
#       read:categories: read your categories
#   api_key:
#     type: apiKey
#     name: api_key
#     in: header
definitions:
  CategorySwagger:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
    xml:
      name: categories
  # User:
  #   type: object
  #   properties:
  #     id:
  #       type: integer
  #       format: int32
  #     name:
  #       type: string
  #     phone:
  #       type: string
  #     email:
  #       type: string
  #     password:
  #       type: string
  #   xml:
  #     name: User

externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /hiddenplayer/libm/1.0.0
schemes:
  - https
  - http
# Added by API Auto Mocking Plugin
basePath: /hiddenplayer/book/1.0.0